{"version":3,"sources":["components/commons/Header.jsx","components/commons/Footer/Footer.jsx","components/localizadorTiempo/localizador/index.js","services/serviceAPI.js","components/localizadorTiempo/datosTiempo/iconoTiempo/index.js","components/localizadorTiempo/datosTiempo/datosTemperatura/index.js","components/localizadorTiempo/datosTiempo/index.js","components/localizadorTiempo/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Footer","Localizador","_getPrototypeOf2","Object","classCallCheck","this","_len","arguments","length","props","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","ciudad","id","api_weather","serviceAPI","fetch","then","data","json","weather_data","result","EstadoTiempo","estadoTiempo","main","IconoTiempo","icono","lib_default","name","weather","size","DatosTemperatura","_this$props","temperatura","viento","humedad","DatosTiempo","Conversor","from","to","Math","round","rel","href","iconoTiempo","datosTemperatura","calcularTemperatura","temp","wind","calcularViento","speed","humidity","LocalizadorTiempo","_this","state","serviceApi","getData","setState","localizadorTiempo_localizador","datosTiempo","App","commons_Header","localizadorTiempo","commons_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b65873f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../../App.css'\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1 className=\"App-title\">El Tiempo de Hoy</h1>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render(){\r\n        return (\r\n            <footer className=\"App-footer\">\r\n                <h3>Región de Murcia, 2019.</h3>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport './localizador.css';\r\n\r\nclass Localizador extends Component {\r\n    constructor(...props){\r\n        super(...props);\r\n    }\r\n\r\n    render(){\r\n        const {ciudad} = this.props;\r\n        return(\r\n            <div id=\"localizador\"><h1>{ciudad}</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Localizador;","const location = \"Murcia, es\";\r\nconst appID = \"5ae765425c003aec7bdc81cbbd770220\";\r\nconst api_weather = `http://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${appID}`;\r\n\r\nclass serviceAPI {\r\n\r\n    static async getData(){\r\n        let result = await fetch(api_weather)\r\n            .then(data => data.json())\r\n            .then(weather_data => weather_data);\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default serviceAPI;","import React, { Component } from 'react';\r\nimport WeatherIcons from 'react-weathericons';\r\n\r\nconst EstadoTiempo = estadoTiempo => {\r\n    switch (estadoTiempo[0].main) {\r\n        case \"Clouds\":\r\n            return \"cloud\";\r\n        case \"Sun\":\r\n            return \"day-sunny\";\r\n        case \"rain\":\r\n            return \"rain\";\r\n        default:\r\n            return \"day-sunny\"\r\n    }\r\n};\r\n\r\nclass IconoTiempo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        const {icono} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <h1> <WeatherIcons name={icono.weather ? EstadoTiempo(icono.weather) : 'sun'} size=\"2x\"/> </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default IconoTiempo;","import React, { Component } from 'react';\r\n\r\nclass DatosTemperatura extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render(){\r\n        const {temperatura, viento, humedad} = this.props;\r\n\r\n        return (\r\n            <div className=\"App-datostemp\">\r\n                <div id=\"App-temp\">\r\n                    <span>{`${temperatura} Cº`}</span>\r\n                </div>\r\n\r\n                <div id=\"App-hum\">\r\n                    <span>{humedad} % </span>\r\n                </div>\r\n\r\n                <div id=\"App-viento\">\r\n                    <span>{viento} km/h </span>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatosTemperatura;","import React, { Component } from 'react';\r\nimport IconoTiempo from './iconoTiempo';\r\nimport DatosTemperatura from './datosTemperatura';\r\nimport Conversor from 'convert-units';\r\n\r\nclass DatosTiempo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    calcularTemperatura(temperatura){\r\n        return Conversor(temperatura).from('K').to('C');\r\n    }\r\n\r\n    calcularViento(viento){\r\n        return Math.round(Conversor(viento).from('m/s').to('km/h'*100)/100);\r\n    }\r\n\r\n    render(){\r\n        const {data} = this.props;\r\n        const TempBase = 20;\r\n        const HumBase = 20;\r\n        const VientoBase = 5;\r\n        return(\r\n            <div id=\"datosTiempo\">\r\n                <head><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css\"></link></head>\r\n\r\n                  <div id=\"titulos\">\r\n                    <div id=\"p1\" className=\"animated fadeInLeft\">\r\n                        <p>Temperatura</p>\r\n                    </div>\r\n                    <div id=\"p2\" className=\"animated fadeInUp\">\r\n                        <p>Humedad</p>\r\n                    </div>\r\n                    <div id=\"p3\" className=\"animated fadeInRight\">\r\n                        <p>Velocidad del <br/>Viento</p>\r\n                    </div>\r\n                  </div>\r\n                <IconoTiempo icono={data} />\r\n                <DatosTemperatura temperatura={data.main ? this.calcularTemperatura(data.main.temp): TempBase}\r\n                viento={data.wind ? this.calcularViento(data.wind.speed) : VientoBase}\r\n                humedad={data.main ? data.main.humidity : HumBase}               />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DatosTiempo;","import React, {Component} from 'react';\r\nimport Localizador from './localizador';\r\nimport serviceApi from '../../services/serviceAPI';\r\nimport DatosTiempo from './datosTiempo';\r\n\r\nconst location = \"Murcia, es\";\r\n\r\nclass LocalizadorTiempo extends Component {\r\n\r\n    constructor(...props) {\r\n        super(...props);\r\n        this.state = {data:{}}\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount(){\r\n        let data = await serviceApi.getData();\r\n        this.setState({data:data})\r\n    }\r\n\r\n    render(){\r\n        const data = this.state;\r\n        return(\r\n            <div>\r\n                <Localizador ciudad={location}/>\r\n                <DatosTiempo data={data} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LocalizadorTiempo;","import React, { Component } from 'react';\nimport  Header from './components/commons/Header';\nimport Footer from './components/commons/Footer/Footer';\nimport LocalizadorTiempo from './components/localizadorTiempo'\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <LocalizadorTiempo />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}